<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.registe.brick.userbrick.mapper.CourseMapper" >
  <resultMap id="BaseResultMap" type="com.registe.brick.userbrick.entity.gen.Course" >
    <id column="courseId" property="courseid" jdbcType="VARCHAR" />
    <result column="courseName" property="coursename" jdbcType="VARCHAR" />
    <result column="createTime" property="createtime" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    courseId, courseName, createTime
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from course
    where courseId = #{courseid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from course
    where courseId = #{courseid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.registe.brick.userbrick.entity.gen.Course" >
    insert into course (courseId, courseName, createTime
      )
    values (#{courseid,jdbcType=VARCHAR}, #{coursename,jdbcType=VARCHAR}, #{createtime,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.registe.brick.userbrick.entity.gen.Course" >
    insert into course
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="courseid != null" >
        courseId,
      </if>
      <if test="coursename != null" >
        courseName,
      </if>
      <if test="createtime != null" >
        createTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="courseid != null" >
        #{courseid,jdbcType=VARCHAR},
      </if>
      <if test="coursename != null" >
        #{coursename,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.registe.brick.userbrick.entity.gen.Course" >
    update course
    <set >
      <if test="coursename != null" >
        courseName = #{coursename,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        createTime = #{createtime,jdbcType=VARCHAR},
      </if>
    </set>
    where courseId = #{courseid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.registe.brick.userbrick.entity.gen.Course" >
    update course
    set courseName = #{coursename,jdbcType=VARCHAR},
      createTime = #{createtime,jdbcType=VARCHAR}
    where courseId = #{courseid,jdbcType=VARCHAR}
  </update>
</mapper>